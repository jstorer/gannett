{
	"id": "08ec81c9-1139-4f1f-b94e-15fe24f267e3",
	"name": "supermarket_tests",
	"allTests": [],
	"timestamp": "2018-05-11T00:48:52.621Z",
	"collection_id": "ce852794-60ee-4bf0-a5ec-d3e5868adbaa",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "5395d517-2200-4f61-84c3-536c80adf6db",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "ce852794-60ee-4bf0-a5ec-d3e5868adbaa",
		"name": "supermarket_tests",
		"description": "",
		"auth": null,
		"events": null,
		"variables": [],
		"order": [
			"74b53771-f8e3-4333-84c8-b614081a6ad4",
			"f95fd1b8-b2d2-45b3-bc19-e8dcc8290df4",
			"72bd26c2-ea52-47c8-a38e-f796d35d70da",
			"80c54982-94c8-49bd-85aa-930f70b7bf2f",
			"967195ea-a0ec-4b90-a0f7-aee1e7676d06",
			"6a528ad5-0271-4f30-8e15-dedcb2f77a13",
			"f1b274d2-bcab-4e5b-824c-2863f165ad82",
			"a8e72975-a399-4803-a4bd-65e0429ab49e",
			"6ec38c7a-9caf-4a12-b960-fa965136edf1",
			"d93d84e3-2f76-4f3d-84e9-7b5b4ae26beb",
			"dbe4519a-ebb6-4f8b-ab55-90c2083385eb",
			"ceeee4f2-1571-41de-8ad7-0e2ab8861351",
			"4e37b12f-c01e-4658-a78b-95a121dc00ec"
		],
		"folders_order": [],
		"owner": "0",
		"permissions": {},
		"favorite": false,
		"shared": false,
		"type": "collection",
		"depth": 0
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "Get All Produce Items",
			"id": "74b53771-f8e3-4333-84c8-b614081a6ad4",
			"url": "localhost:8080/api/produce",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 200": true,
				"Schema for single item is valid": true,
				"Schema for all is valid": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				},
				"Schema for all is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"22"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 200": true,
					"Schema for single item is valid": true,
					"Schema for all is valid": true
				}
			],
			"time": "22",
			"totalRequestTime": "22",
			"iterationResults": {}
		},
		{
			"name": "Get One Item",
			"id": "f95fd1b8-b2d2-45b3-bc19-e8dcc8290df4",
			"url": "localhost:8080/api/produce/A12T-4GH7-QPL9-3N4M",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 200": true,
				"Schema for single item is valid": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"8"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 200": true,
					"Schema for single item is valid": true
				}
			],
			"time": "8",
			"totalRequestTime": "8",
			"iterationResults": {}
		},
		{
			"name": "Get Item Doesn't Exist",
			"id": "72bd26c2-ea52-47c8-a38e-f796d35d70da",
			"url": "localhost:8080/api/produce/A12T-4GH7-QPL9-3N4A",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 404": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 404": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Get Invalid Code",
			"id": "80c54982-94c8-49bd-85aa-930f70b7bf2f",
			"url": "localhost:8080/api/produce/23",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 400": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 400": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Create New Item",
			"id": "967195ea-a0ec-4b90-a0f7-aee1e7676d06",
			"url": "localhost:8080/api/produce",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 201": true,
				"Schema for single item is valid": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 201": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 201": true,
					"Schema for single item is valid": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Create item exists",
			"id": "6a528ad5-0271-4f30-8e15-dedcb2f77a13",
			"url": "localhost:8080/api/produce",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 409": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 409": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 409": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Update an Item",
			"id": "f1b274d2-bcab-4e5b-824c-2863f165ad82",
			"url": "localhost:8080/api/produce/E5T6-9UI3-TH15-QR88",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 200": true,
				"Schema for single item is valid": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 200": true,
					"Schema for single item is valid": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Update Item Code Doesn't Exist",
			"id": "a8e72975-a399-4803-a4bd-65e0429ab49e",
			"url": "localhost:8080/api/produce/E5T6-9UI3-TH15-1111",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 404": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 404": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Update Item New Code Already Exists",
			"id": "6ec38c7a-9caf-4a12-b960-fa965136edf1",
			"url": "localhost:8080/api/produce/E5T6-9UI3-TH15-QR88",
			"totalTime": 0,
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 409": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 409": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 409": true
				}
			],
			"time": "2",
			"totalRequestTime": "2",
			"iterationResults": {}
		},
		{
			"name": "Update bad json format",
			"id": "d93d84e3-2f76-4f3d-84e9-7b5b4ae26beb",
			"url": "localhost:8080/api/produce",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 400": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"3"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 400": true
				}
			],
			"time": "3",
			"totalRequestTime": "3",
			"iterationResults": {}
		},
		{
			"name": "Update Item bad name and code",
			"id": "dbe4519a-ebb6-4f8b-ab55-90c2083385eb",
			"url": "localhost:8080/api/produce",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 400": true,
				"Schema for validationError schema is valid": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 400": {
					"pass": 1,
					"fail": 0
				},
				"Schema for validationError schema is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"4"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 400": true,
					"Schema for validationError schema is valid": true
				}
			],
			"time": "4",
			"totalRequestTime": "4",
			"iterationResults": {}
		},
		{
			"name": "Delete an Item",
			"id": "ceeee4f2-1571-41de-8ad7-0e2ab8861351",
			"url": "localhost:8080/api/produce/YRT6-72AS-K736-L4AR",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 200": true,
				"Schema for single item is valid": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 200": true,
					"Schema for single item is valid": true
				}
			],
			"time": "2",
			"totalRequestTime": "2",
			"iterationResults": {}
		},
		{
			"name": "Delete an Item that doesnt exist",
			"id": "4e37b12f-c01e-4658-a78b-95a121dc00ec",
			"url": "localhost:8080/api/produce/YRT6-72AS-K736-AAAA",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "Content-Type is present",
				"status": "pass",
				"Status 404": true
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"2"
			],
			"allTests": [
				{
					"Content-Type is present": true,
					"Status 404": true
				}
			],
			"time": "2",
			"totalRequestTime": "2",
			"iterationResults": {}
		}
	],
	"totalPass": 33,
	"totalFail": 0,
	"totalTime": 61,
	"lifecycle": "done",
	"requests": [
		{
			"name": "Get All Produce Items",
			"id": "74b53771-f8e3-4333-84c8-b614081a6ad4",
			"url": "localhost:8080/api/produce",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				},
				"Schema for all is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get One Item",
			"id": "f95fd1b8-b2d2-45b3-bc19-e8dcc8290df4",
			"url": "localhost:8080/api/produce/A12T-4GH7-QPL9-3N4M",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Item Doesn't Exist",
			"id": "72bd26c2-ea52-47c8-a38e-f796d35d70da",
			"url": "localhost:8080/api/produce/A12T-4GH7-QPL9-3N4A",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 404": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Get Invalid Code",
			"id": "80c54982-94c8-49bd-85aa-930f70b7bf2f",
			"url": "localhost:8080/api/produce/23",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 400": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create New Item",
			"id": "967195ea-a0ec-4b90-a0f7-aee1e7676d06",
			"url": "localhost:8080/api/produce",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 201": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Create item exists",
			"id": "6a528ad5-0271-4f30-8e15-dedcb2f77a13",
			"url": "localhost:8080/api/produce",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 409": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update an Item",
			"id": "f1b274d2-bcab-4e5b-824c-2863f165ad82",
			"url": "localhost:8080/api/produce/E5T6-9UI3-TH15-QR88",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Item Code Doesn't Exist",
			"id": "a8e72975-a399-4803-a4bd-65e0429ab49e",
			"url": "localhost:8080/api/produce/E5T6-9UI3-TH15-1111",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 404": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Item New Code Already Exists",
			"id": "6ec38c7a-9caf-4a12-b960-fa965136edf1",
			"url": "localhost:8080/api/produce/E5T6-9UI3-TH15-QR88",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 409,
				"name": "Conflict",
				"detail": {
					"name": "Conflict",
					"detail": "Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 409": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update bad json format",
			"id": "d93d84e3-2f76-4f3d-84e9-7b5b4ae26beb",
			"url": "localhost:8080/api/produce",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 400": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Update Item bad name and code",
			"id": "dbe4519a-ebb6-4f8b-ab55-90c2083385eb",
			"url": "localhost:8080/api/produce",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 400": {
					"pass": 1,
					"fail": 0
				},
				"Schema for validationError schema is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete an Item",
			"id": "ceeee4f2-1571-41de-8ad7-0e2ab8861351",
			"url": "localhost:8080/api/produce/YRT6-72AS-K736-L4AR",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 200": {
					"pass": 1,
					"fail": 0
				},
				"Schema for single item is valid": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "Delete an Item that doesnt exist",
			"id": "4e37b12f-c01e-4658-a78b-95a121dc00ec",
			"url": "localhost:8080/api/produce/YRT6-72AS-K736-AAAA",
			"time": "2018-05-11T00:48:52.621Z",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"Content-Type is present": {
					"pass": 1,
					"fail": 0
				},
				"Status 404": {
					"pass": 1,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}